version: 2.1

jobs:
  all:
    docker:
      - image: golang:alpine
    environment:
      COSIGN_EXPERIMENTAL: "1"
      KO_DOCKER_REPO: "us-central1-docker.pkg.dev/com-seankhliao/build"
      SERVICE_ACCOUNT_EMAIL: "sigstore-oidc-test-circleci@com-seankhliao.iam.gserviceaccount.com"
    steps:
      - checkout
      - run:
          name: wi ex
          command: |
            apk add curl jq

            set -ex

            STS_TOKEN=$(jq -n \
              --arg token "${CIRCLE_OIDC_TOKEN}" \
              '{
                audience:           "//iam.googleapis.com/projects/330311169810/locations/global/workloadIdentityPools/sigstore-oidc-test/providers/circleci", 
                grantType:          "urn:ietf:params:oauth:grant-type:token-exchange",
                requestedTokenType: "urn:ietf:params:oauth:token-type:access_token",
                scope:              "https://www.googleapis.com/auth/cloud-platform",
                subjectTokenType:   "urn:ietf:params:oauth:token-type:id_token",
                subjectToken:       $token
              }' | \
            curl -0 --fail -s \
              https://sts.googleapis.com/v1/token \
              -H 'Content-Type: text/json; charset=utf-8' \
              -d @- | \
            jq -r .accessToken)
            
            IDENTITY_TOKEN=$(jq -n \
              '{
                audience: "sigstore",
                includeEmail: true
              }' | \
            curl -0 --fail -s \
              https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${SERVICE_ACCOUNT_EMAIL}:generateIdToken \
              -H "Content-Type: text/json; charset=utf-8" \
              -H "Authorization: Bearer $STS_TOKEN" \
              -d @- | \
            jq -r .token)

            ACCESS_TOKEN=$(jq -n \
              '{
                scope: ["https://www.googleapis.com/auth/cloud-platform"]
              }' | \
            curl -0 --fail -s \
              https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${SERVICE_ACCOUNT_EMAIL}:generateAccessToken \
              -H "Content-Type: text/json; charset=utf-8" \
              -H "Authorization: Bearer $STS_TOKEN" \
              -d @- | \
            jq -r .accessToken)

            mkdir -p /go/bin
            # go install github.com/google/ko@latest
            # go install github.com/sigstore/cosign/cmd/cosign@latest
            curl -sL https://github.com/ko-build/ko/releases/download/v0.12.0/ko_0.12.0_Linux_x86_64.tar.gz | tar xzf - ko
            mv ko /go/bin/
            curl -sLo /go/bin/cosign https://github.com/sigstore/cosign/releases/download/v1.13.1/cosign-linux-amd64
            chmod +x /go/bin/*

            ko login us-central1-docker.pkg.dev --username oauth2accesstoken --password "${ACCESS_TOKEN}"
            ko build --image-refs image.txt .

            echo "=== image ==="
            cat image.txt

            cosign sign --identity-token "${IDENTITY_TOKEN}" $(cat image.txt)

            echo "=== sig ==="
            cat out.sig

workflows:
  main:
    jobs:
      - all:
          context:
            - empty-context
